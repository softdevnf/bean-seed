
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_shared_dict pausedreqs 10m;

    upstream backend {
        server apis:3000;
    }

    upstream frontend {
        server site;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;

        location /api/ {
            rewrite ^/api/(.*)$ /api/$1 break;
            set $intermission_interval 0.05; #seconds
            set $intermission_max_time 300; #seconds
            set $intermission_health_check_path /up/database;
            set $intermission_privileged_user_agent "Pingdom";
            access_by_lua_file /intermission/intermission.lua;
            proxy_pass http://backend/;
        }

        location /_intermission {
          content_by_lua_file /intermission/intermission_helpers.lua;
        }

        location / {
            set $intermission_interval 0.05; #seconds
            set $intermission_max_time 300; #seconds
            set $intermission_health_check_path /up/database;
            set $intermission_privileged_user_agent "Pingdom";
            access_by_lua_file /intermission/intermission.lua;
            proxy_pass http://frontend/;
        }
    }
}
